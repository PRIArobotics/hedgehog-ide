swagger: '2.0'
info:
  title: Hedgehog Deployment API
  description: Program management and deployment API of the Hedgehog controller
  version: '1.2.0'
  contact:
    name: 'Markus Klein'
    url: 'http://pria.at'
    email: 'klein@pria.at'
  license:
    name: AGPL-3.0
    url: https://www.gnu.org/licenses/agpl.txt
produces:
- application/vnd.api+json
consumes:
- application/vnd.api+json
paths:
  /config:
    get:
      summary: 'Retrieves for the client relevant system configuration'
      responses:
        200:
          description: 'Returns the JWT auth token'
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                    - configuration
                  attributes:
                    type: object
                    properties:
                      auth:
                        type: object
                        properties:
                          enabled:
                            type: boolean
  /auth/login:
    post:
      summary: 'Login to the IDE and generate a JWT token'
      parameters:
        - name: user
          in: body
          required: true
          schema:
            type: object
            properties:
              data:
                type: object
                required:
                - type
                - attributes
                properties:
                  type:
                    type: string
                    enum:
                    - user
                  attributes:
                    type: object
                    required:
                    - username
                    - password
                    properties:
                      name:
                        type: string
                      password:
                        type: string
      responses:
        200:
          description: 'Returns the JWT auth token'
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                    - token
                  attributes:
                    type: object
                    properties:
                      token:
                        type: string
  /programs:
    get:
      summary: 'Get a list of all programs stored on the controller'
      responses:
        200:
          description: 'Returns a list for programs'
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Program'
    post:
      summary: 'Create a new program'
      parameters:
      - name: program
        in: body
        required: true
        schema:
          type: object
          properties:
            data:
              type: object
              required:
              - type
              - attributes
              properties:
                type:
                  type: string
                  enum:
                  - program
                attributes:
                  type: object
                  required:
                  - name
                  properties:
                    name:
                      type: string
                    copyFrom:
                      type: string
      responses:
        201:
          description: 'Returns the newly created program'
          schema:
            allOf:
            - type: object
              properties:
                data:
                    $ref: '#/definitions/Program'
            - $ref: '#/definitions/JsonApiTopLevelLink'
  /programs/{program_id}:
    get:
      summary: 'Get a single program'
      parameters:
      - name: program_id
        in: path
        type: string
        required: true
      responses:
        200:
          description: 'Returns the program'
          schema:
            allOf:
            - type: object
              properties:
                data:
                  $ref: '#/definitions/Program'
            - $ref: '#/definitions/JsonApiTopLevelLink'
    patch:
      summary: 'Update a program'
      parameters:
      - name: program_id
        in: path
        type: string
        required: true
      - name: program
        in: body
        required: true
        schema:
          type: object
          properties:
            data:
              type: object
              required:
              - id
              - type
              properties:
                id:
                  type: string
                type:
                  type: string
                  enum:
                  - program
                attributes:
                  type: object
                  required:
                  - name
                  properties:
                    name:
                      type: string
      responses:
        200:
          description: 'Returns a representation of the updated program'
          schema:
            allOf:
            - type: object
              properties:
                data:
                  $ref: '#/definitions/Program'
            - $ref: '#/definitions/JsonApiTopLevelLink'

    delete:
      summary: 'Delete a program and all its related resources'
      parameters:
      - name: program_id
        in: path
        type: string
        required: true
      responses:
        204:
          description: 'The resource has been deleted accordingly'

  /blobs/{program_id}/{blob_id}:
    get:
      parameters:
      - name: program_id
        in: path
        type: string
        required: true
      - name: blob_id
        in: path
        type: string
        required: true
      responses:
        200:
          description: 'Returns the requested blob'
          schema:
            allOf:
            - type: object
              properties:
                data:
                  $ref: '#/definitions/Blob'
            - $ref: '#/definitions/JsonApiTopLevelLink'

  /trees/{program_id}/{tree_id}:
    get:
      summary: 'Get a tree object of a program'
      parameters:
      - name: program_id
        in: path
        type: string
        required: true
      - name: tree_id
        in: path
        type: string
        required: true
      responses:
        200:
          description: 'Returns a requested tree'
          schema:
            allOf:
            - type: object
              properties:
                data:
                  $ref: '#/definitions/Tree'
                included:
                  type: array
                  items:
                    $ref: '#/definitions/TreeItem'
            - $ref: '#/definitions/JsonApiTopLevelLink'


  /versions/{program_id}:
    get:
      summary: 'Get a list of versions of a program'
      parameters:
      - name: program_id
        in: path
        type: string
        required: true
      responses:
        200:
          description: 'Returns a list of versions'
          schema:
            allOf:
            - type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/definitions/Version'
            - $ref: '#/definitions/JsonApiTopLevelLink'
    post:
      summary: 'Create a new version from the program in the working tree'
      parameters:
      - name: program_id
        in: path
        type: string
        required: true
      - name: version
        in: body
        schema:
          type: object
          properties:
            data:
              type: object
              required:
              - id
              - type
              properties:
                id:
                  type: string
                type:
                  type: string
                  enum:
                  - version
                attributes:
                  type: object
                  properties:
                    tag:
                      type: string
                    message:
                      type: string
      responses:
        201:
          description: 'Returns the newly created version'
          schema:
            allOf:
            - type: object
              properties:
                data:
                  $ref: '#/definitions/Version'
            - $ref: '#/definitions/JsonApiTopLevelLink'

  /versions/{program_id}/{version_id}:
    get:
      summary: 'Get a single version'
      parameters:
      - name: program_id
        in: path
        type: string
        required: true
      - name: version_id
        in: path
        type: string
        required: true
      responses:
        200:
          description: 'Returns information about the requested version'
          schema:
            allOf:
            - type: object
              properties:
                data:
                  $ref: '#/definitions/Version'
            - $ref: '#/definitions/JsonApiTopLevelLink'
  /versions/{program_id}/{version_id}/parents:
    get:
      summary: 'Get a list of parents for this version'
      parameters:
      - name: program_id
        in: path
        type: string
        required: true
      - name: version_id
        in: path
        type: string
        required: true
      responses:
        200:
          description: 'Returns parents for a version'
          schema:
            allOf:
            - type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/definitions/Version'
            - $ref: '#/definitions/JsonApiTopLevelLink'

  /directories/{program_id}:
    post:
      summary: 'Create a new directory in the workingtree'
      parameters:
      - name: program_id
        in: path
        type: string
        required: true
      - name: directory
        in: body
        required: true
        schema:
          type: object
          properties:
            data:
              type: object
              required:
              - id
              - type
              properties:
                id:
                  type: string
                type:
                  type: string
                  enum:
                  - directory
                attributes:
                  type: object
                  properties:
                    mode:
                      type: string
                    path:
                      type: string
      responses:
        200:
          description: 'Returns the newly created directory'
          schema:
            allOf:
            - type: object
              properties:
                data:
                  $ref: '#/definitions/Directory'
            - $ref: '#/definitions/JsonApiTopLevelLink'
  /directories/{program_id}/{directory_id}:
    get:
      summary: 'Get a directory in the workingtree'
      parameters:
      - name: program_id
        in: path
        type: string
        required: true
      - name: directory_id
        in: path
        type: string
        required: true
      responses:
        200:
          description: 'Returns the requested directory'
          schema:
            allOf:
            - type: object
              properties:
                data:
                    $ref: '#/definitions/Directory'
                included:
                  type: array
                  items:
                    type: object
            - $ref: '#/definitions/JsonApiTopLevelLink'
    patch:
      summary: 'Update a directory (rename or chmod)'
      parameters:
      - name: program_id
        in: path
        type: string
        required: true
      - name: directory_id
        in: path
        type: string
        required: true
      - name: directory
        in: body
        required: true
        schema:
          type: object
          properties:
            data:
              type: object
              required:
              - id
              - type
              properties:
                id:
                  type: string
                type:
                  type: string
                  enum:
                  - directory
                attributes:
                  type: object
                  properties:
                    mode:
                      type: string
                    path:
                      type: string
      responses:
        200:
          description: 'Returns the updated directory'
          schema:
            allOf:
            - type: object
              properties:
                data:
                  $ref: '#/definitions/Directory'
            - $ref: '#/definitions/JsonApiTopLevelLink'
    delete:
      summary: 'Delete a directory and all included files and subdirectories (use with caution!)'
      parameters:
      - name: program_id
        in: path
        type: string
        required: true
      - name: directory_id
        in: path
        type: string
        required: true
      responses:
        204:
          description: 'The resource has been deleted accordingly'

  /files/{program_id}:
    post:
      summary: 'Create a new file within a program'
      parameters:
      - name: program_id
        in: path
        type: string
        required: true
      - name: file
        in: body
        required: true
        schema:
          type: object
          properties:
            data:
              type: object
              required:
              - id
              - type
              - attributes
              properties:
                id:
                    type: string
                type:
                  type: string
                  enum:
                  - file
                attributes:
                  type: object
                  required:
                  - path
                  properties:
                    path:
                      type: string
                    mode:
                      type: string
                    content:
                      type: string
                    encoding:
                      type: string
      responses:
        200:
          description: 'Returns the newly created file'
          schema:
            allOf:
            - type: object
              properties:
                data:
                  $ref: '#/definitions/File'
            - $ref: '#/definitions/JsonApiTopLevelLink'
  /files/{program_id}/{file_id}:
    get:
      summary: 'Get a file'
      parameters:
      - name: content
        in: query
        description: 'Include file content in response'
        type: boolean
      - name: program_id
        in: path
        type: string
        required: true
      - name: file_id
        in: path
        type: string
        required: true
      responses:
        200:
          description: 'Returns the requested file'
          schema:
            allOf:
            - type: object
              properties:
                data:
                  $ref: '#/definitions/File'
            - $ref: '#/definitions/JsonApiTopLevelLink'
    patch:
      summary: 'Update a file'
      parameters:
      - name: program_id
        in: path
        type: string
        required: true
      - name: file_id
        in: path
        type: string
        required: true
      - name: file
        in: body
        required: true
        schema:
          type: object
          properties:
            data:
              type: object
              required:
              - id
              - type
              properties:
                id:
                    type: string
                type:
                  type: string
                  enum:
                  - file
                attributes:
                  type: object
                  properties:
                    path:
                      type: string
                    mode:
                      type: string
                    content:
                      type: string
                    encoding:
                      type: string
      responses:
        200:
          description: 'Returns the updated version of the file'
          schema:
            allOf:
            - type: object
              properties:
                data:
                  $ref: '#/definitions/File'
            - $ref: '#/definitions/JsonApiTopLevelLink'
    delete:
      summary: 'Delete a file from a project'
      parameters:
      - name: program_id
        in: path
        type: string
        required: true
      - name: file_id
        in: path
        type: string
        required: true
      responses:
        204:
          description: 'The resource has been deleted accordingly'
  /files/{program_id}/{file_id}/content:
    get:
      summary: 'Get the content of a file'
      parameters:
      - name: program_id
        in: path
        type: string
        required: true
      - name: file_id
        in: path
        type: string
        required: true
      responses:
        200:
          description: 'File content'
          schema:
            type: file

  /sensors:
    get:
      summary: 'Get a list of all sensors with its current values'
      responses:
        200:
          description: 'Returns all sensors'
          schema:
            allOf:
            - type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/definitions/Sensor'
            - $ref: '#/definitions/JsonApiTopLevelLink'
  /sensors/{sensor_id}:
    get:
      summary: 'Get a single sensor'
      parameters:
      - name: sensor_id
        in: path
        type: string
        required: true
      responses:
        200:
          description: 'Returns the requested sensor'
          schema:
            allOf:
            - type: object
              properties:
                data:
                  $ref: '#/definitions/Sensor'
            - $ref: '#/definitions/JsonApiTopLevelLink'
    patch:
      summary: Set a sensor's pullup
      parameters:
      - name: sensor_id
        in: path
        type: string
        required: true
      - name: sensor
        in: body
        required: true
        schema:
          type: object
          properties:
            data:
              type: object
              required:
              - id
              - type
              - attributes
              properties:
                id:
                  type: string
                type:
                  type: string
                  enum:
                  - sensor
                attributes:
                  type: object
                  required:
                  - pullup
                  properties:
                    pullup:
                      type: boolean
      responses:
        200:
          description: 'Returns the sensor with the updated pullup resistor'
          schema:
            allOf:
            - type: object
              properties:
                data:
                  $ref: '#/definitions/Sensor'
            - $ref: '#/definitions/JsonApiTopLevelLink'
  /servos:
    get:
      summary: 'Get a list of all servos'
      responses:
        200:
          description: 'Returns all sensors'
          schema:
            allOf:
            - type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/definitions/Servo'
            - $ref: '#/definitions/JsonApiTopLevelLink'
  /servos/{servo_id}:
    get:
      summary: 'Get a single servo'
      parameters:
      - name: servo_id
        in: path
        type: string
        required: true
      responses:
        200:
          description: 'Returns the requested servo'
          schema:
            allOf:
            - type: object
              properties:
                data:
                  $ref: '#/definitions/Servo'
            - $ref: '#/definitions/JsonApiTopLevelLink'
    patch:
      summary: 'Enable a servo or set its position'
      parameters:
      - name: servo_id
        in: path
        type: string
        required: true
      - name: servo
        in: body
        required: true
        schema:
          type: object
          properties:
            data:
              $ref: '#/definitions/Servo'
      responses:
        200:
          description: 'Returns the updated servo data'
          schema:
            allOf:
            - type: object
              properties:
                data:
                  $ref: '#/definitions/Servo'
            - $ref: '#/definitions/JsonApiTopLevelLink'

  /motors:
    get:
      summary: 'Get a list of all motors'
      responses:
        200:
          description: 'Returns an array containing motor'
          schema:
            allOf:
            - type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/definitions/Motor'
            - $ref: '#/definitions/JsonApiTopLevelLink'
  /motors/{motor_id}:
    get:
      summary: 'Get information about a single motor'
      parameters:
      - name: motor_id
        in: path
        type: string
        required: true
      responses:
        200:
          description: 'Returns the requested motor'
          schema:
            allOf:
            - type: object
              properties:
                data:
                  $ref: '#/definitions/Motor'
            - $ref: '#/definitions/JsonApiTopLevelLink'
    patch:
      summary: 'Control a motor'
      parameters:
      - name: motor_id
        in: path
        type: string
        required: true
      - name: motor
        in: body
        required: true
        schema:
          type: object
          properties:
            data:
              $ref: '#/definitions/Motor'
      responses:
        200:
          description: 'Returns the updated motor data'
          schema:
            allOf:
            - type: object
              properties:
                data:
                  $ref: '#/definitions/Motor'
            - $ref: '#/definitions/JsonApiTopLevelLink'

  /processes:
    post:
      summary: 'Spawn a new process'
      parameters:
        - name: program
          in: body
          required: true
          schema:
            type: object
            properties:
              data:
                type: object
                required:
                - type
                properties:
                  type:
                    type: string
                    enum:
                    - process
                  attributes:
                    type: object
                    required:
                    - programId
                    - file
                    properties:
                      programId:
                          type: string
                      file:
                        type: string
                      args:
                        type: array
                        items:
                          type: string
      responses:
        201:
          description: 'Returns newly created process'
          schema:
            allOf:
            - type: object
              properties:
                data:
                  $ref: '#/definitions/Process'
            - $ref: '#/definitions/JsonApiTopLevelLink'
  /processes/{pid}:
    parameters:
    - name: pid
      in: path
      type: string
      required: true
    get:
      summary: 'Get a process'
      responses:
        200:
          description: 'Process data'
          schema:
            allOf:
            - type: object
              properties:
                data:
                  $ref: '#/definitions/Process'
            - $ref: '#/definitions/JsonApiTopLevelLink'
    delete:
      summary: 'Kill a running process'
      responses:
        204:
          description: 'The process has been killed successfully'
  /processes/{pid}/stdout:
    parameters:
      - name: pid
        in: path
        type: string
        required: true
    get:
      summary: 'Get the output of a process; Only available while process is alive'
      responses:
        200:
          description: 'Process stdout'
          schema:
            type: file
  /processes/{pid}/stderr:
    parameters:
      - name: pid
        in: path
        type: string
        required: true
    get:
      summary: 'Get content of the stderr stream of a process; Only available while process is alive'
      responses:
        200:
          description: 'Process stderr'
          schema:
            type: file
  /processes/{pid}/stdin:
    parameters:
      - name: pid
        in: path
        type: string
        required: true
    patch:
      summary: 'Send data to the stdin of the process'
      parameters:
      - name: program
        in: body
        required: true
        schema:
          type: string
      responses:
        204:
          description: 'Data has been written successfully'

definitions:
  Program:
    type: object
    required:
    - type
    properties:
      id:
        type: string
      type:
        type: string
        enum:
        - program
      attributes:
        type: object
        required:
        - name
        - creationDate
        - latestVersionId
        - workingTreeClean
        properties:
          name:
            type: string
          creationDate:
            type: string
            format: dateTime
          latestVersionId:
            type: string
          workingTreeClean:
            type: boolean
      relationships:
        type: object
        properties:
          versions:
            $ref: '#/definitions/JsonApiRelatedLink'
          latestVersion:
            $ref: '#/definitions/JsonApiRelatedLink'
          workingtreeRoot:
            $ref: '#/definitions/JsonApiRelatedLink'

  Blob:
    type: object
    required:
    - type
    properties:
      id:
        type: string
      type:
        type: string
        enum:
        - blob
      attributes:
        type: object
        properties:
          content:
            type: string
          encoding:
            type: string
          size:
            type: integer

  Tree:
    type: object
    required:
    - type
    properties:
      id:
        type: string
      type:
        type: string
        enum:
        - tree
      relationships:
        type: object
        properties:
          items:
            $ref: '#/definitions/JsonApiRelationshipIncludedMany'
  TreeItem:
    type: object
    required:
    - type
    properties:
      id:
        type: string
      type:
        type: string
        enum:
        - tree-item
      attributes:
        type: object
        properties:
          path:
            type: string
          mode:
            type: string
          type:
            type: string
      relationships:
        type: object
        properties:
          tree:
            $ref: '#/definitions/JsonApiRelatedLink'
          child:
            $ref: '#/definitions/JsonApiRelatedLink'

  Version:
    type: object
    properties:
      id:
        type: string
      type:
        type: string
        enum:
        - version
      attributes:
        type: object
        properties:
          tag:
            type: string
          message:
            type: string
      relationships:
        type: object
        properties:
          tree:
            $ref: '#/definitions/JsonApiRelatedLink'
          program:
            $ref: '#/definitions/JsonApiRelatedLink'
          parents:
            $ref: '#/definitions/JsonApiRelatedLink'

  Directory:
    type: object
    required:
    - type
    properties:
      id:
        type: string
      type:
        type: string
        enum:
        - directory
      attributes:
        type: object
        properties:
          mode:
            type: string
          path:
            type: string
      relationships:
        type: object
        properties:
          parent:
            $ref: '#/definitions/JsonApiRelatedLink'
          items:
            $ref: '#/definitions/JsonApiRelationshipIncludedMany'
  DirectoryItem:
    type: object
    required:
    - type
    properties:
      id:
        type: string
      type:
        type: string
        enum:
        - directory-item
      attributes:
        type: object
        properties:
          path:
            type: string
          mode:
            type: string
          type:
            type: string
      relationships:
        type: object
        properties:
          directory:
            $ref: '#/definitions/JsonApiRelatedLink'
          child:
            $ref: '#/definitions/JsonApiRelatedLink'
  File:
    type: object
    required:
    - type
    properties:
      id:
          type: string
      type:
        type: string
        enum:
        - file
      attributes:
        type: object
        properties:
          path:
            type: string
          mode:
            type: string
          content:
            type: string
          encoding:
            type: string
          size:
            type: integer
      relationships:
        type: object
        properties:
          directory:
            $ref: '#/definitions/JsonApiRelatedLink'

  Sensor:
    type: object
    properties:
      id:
        type: string
      type:
        type: string
        enum:
        - sensor
      attributes:
        type: object
        properties:
          type:
            type: string
            enum:
            - analog
            - digital
          value:
            type: integer
          pullup:
            type: boolean

  Servo:
    type: object
    properties:
      id:
        type: string
      type:
        type: string
        enum:
        - servo
      attributes:
        type: object
        properties:
          enabled:
            type: boolean
          position:
            type: integer

  Motor:
    type: object
    properties:
      id:
        type: string
      type:
        type: string
        enum:
        - motor
      attributes:
        type: object
        properties:
          power:
            type: integer
          velocity:
            type: integer

  Process:
    type: object
    required:
    - type
    properties:
      id:
        type: string
      type:
        type: string
        enum:
        - process
      attributes:
        type: object
        properties:
          programId:
            type: string
          file:
            type: string
          args:
            type: array
            items:
              type: string
      relationships:
        type: object
        properties:
          stdout:
            $ref: '#/definitions/JsonApiRelatedLink'
          stdin:
            $ref: '#/definitions/JsonApiRelatedLink'

  JsonApiRelatedLink:
    type: object
    properties:
      links:
        type: object
        properties:
          related:
            type: string
            format: uri
  JsonApiRelationshipIncludedOne:
    type: object
    properties:
      data:
        $ref: '#/definitions/JsonApiResourceIdentifier'
  JsonApiRelationshipIncludedMany:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/JsonApiResourceIdentifier'
  JsonApiTopLevelLink:
    type: object
    properties:
        links:
            type: object
            properties:
                self:
                    type: string
                    format: uri
                related:
                    type: string
                    format: uri
  JsonApiResourceIdentifier:
    type: object
    required:
    - id
    - type
    properties:
      id:
        type: string
      type:
        type: string
